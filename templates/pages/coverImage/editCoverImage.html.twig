<div class="banner">
	{% if trick.pictures[0] is defined and 'http' in trick.pictures[0].pictureLink %}
		{# fixture #}
		<img src="{{ trick.pictures[0].pictureLink }}" alt="cover-image" class="w-100 img-fluid">
	{% else %}
		{% if trick.coverImage %}
			<img id="cover{{ trick.coverImage }}" src="{{ asset('upload/'~trick.coverImage)|imagine_filter('coverimage') }}" alt="cover-image" class="w-100 img-fluid">
		{% else %}
			{# upload #}
			{% if trick.pictures is not empty %}
				{% if trick.coverImage is not null %}
					<img id="cover{{ trick.coverImage }}" src="{{ asset('upload/'~trick.pictures[0].pictureLink)|imagine_filter('coverimage') }}" alt="cover-image" class="w-100 img-fluid">
				{% else %}
					<img src="{{ asset('images/snowboarder5.jpg')|imagine_filter('coverimage') }}" alt="cover-image" class="w-100 img-fluid">
				{% endif %}
			{% else %}
				<img src="{{ asset('images/snowboarder5.jpg')|imagine_filter('coverimage') }}" alt="cover-image" class="w-100 img-fluid">
			{% endif %}
		{% endif %}
	{% endif %}
	<div class="content">
		{% if app.user %}
			<div class="btn-group btn-trick bg-warning p-2">
				<div class="edit-button">
					{% if trick.coverImage is not null %}
						{% set dataImage = trick.coverImage %}
					{% else %}
						{% set dataImage = 'default' %}
					{% endif %}
					<button type="button" class="btn btn-lg btn-success me-3 btn-modify" data-bs-toggle="modal" data-bs-target="#editCoverImageModal" data-trick-id="{{ trick.id }}" data-cover-image="{{ trick.coverImage }}">
						<i class="fa-solid fa-pen text-light"></i>
					</button>
				</div>
				<div class="delete-button">
					<a href="{{ path('coverimage.delete', {slug: trick.slug}) }}" type="button" class="btn btn-lg btn-danger rounded">
						<i class="fa-solid fa-trash-can text-light"></i>
					</a>
				</div>
			</div>
			<div class="modal fade" id="editCoverImageModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
				<div class="modal-dialog modal-dialog-centered modal-lg">
					<div class="modal-content">
						<div class="modal-header">
							<h1 class="modal-title fs-5" id="exampleModalLabel"></h1>
							<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
						</div>
						{{ form_start(formEditCoverImage, { 'attr': { 'id': 'editCoverForm' } }) }}
						<div class="modal-body alert alert-warning">
							<input type="hidden" id="coverImage">
						 	<input type="hidden" id="trickId">
							<div class="form-group mb-3">
								{{ form_label(formEditCoverImage.coverImage) }}
								{{ form_widget(formEditCoverImage.coverImage) }}
							</div>
							<div id="messagesEditCover"></div>
						</div>
						<div class="modal-footer">
							<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
							<button type="button" id="cover_button" class="btn btn-warning">Submit</button>
						</div>
						{{ form_end(formEditCoverImage) }}
					</div>
				</div>
			</div>
		{% endif %}
	</div>
</div>
<script>
document.addEventListener('DOMContentLoaded', function () {
	let modifyButtons = document.querySelectorAll('.btn-modify');
	modifyButtons.forEach(function (button) {
		button.addEventListener('click', function () {
			let coverImage = this.getAttribute('data-cover-image');
			let trickId = this.getAttribute("data-trick-id");
			document.getElementById("coverImage").value = coverImage;
			document.getElementById("trickId").value = trickId;
		});
	});
	
	// Fonction effacer le message d'erreur
    function clearErrorMessage() {
        document.getElementById('messagesEditCover').innerHTML = '';
    }
    // Fonction afficher un message d'erreur
    function displayErrorMessage(message) {
        let errorMessageHTML = '<div class="alert alert-danger">' + message + '</div>';
        document.getElementById('messagesEditCover').innerHTML = errorMessageHTML;
        //document.getElementById('messagesEditCover').style.display = 'block';
    }
    // Fonction afficher un message de succ√®s
    function displaySuccessMessage(message) {
        let successMessageHTML = '<div class="alert alert-success">' + message + '</div>';
        document.getElementById('messagesEditCover').innerHTML = successMessageHTML;
        document.getElementById('messagesEditCover').style.display = 'block';
    }

    function isImageFormatValid(coverFile) {
        let allowedFormats = ['jpg', 'jpeg', 'png'];
        let fileExtension = coverFile.name.split('.').pop().toLowerCase();
        return allowedFormats.includes(fileExtension);
    }

	let editButton = document.querySelector('#cover_button');
        editButton.addEventListener("click", function() {
		event.preventDefault();
		let coverInput = document.querySelector('#editCoverForm input[type="file"]');
		let trickId = document.querySelector("#trickId").value;
		let coverFile = coverInput.files[0];

		if (coverFile) {
			if (!isImageFormatValid(coverFile)) {
			displayErrorMessage('Invalid image format. Allowed formats: JPG, JPEG, PNG');
			return;
			}

			let formData = new FormData();
			// code ici
			formData.append('cover', coverFile);
			formData.append('coverImage', coverFile.name);
            formData.append('trickId', trickId);

			let xhr = new XMLHttpRequest();
			xhr.open("POST", "{{ path('app_modify_cover') }}", true);
			xhr.onload = function() {
				if (xhr.readyState === 4) {
					if (xhr.status === 200) {
						displaySuccessMessage('The form has been submitted successfully !');
						setTimeout(function () {
							location.reload();
						}, 2000);
					} else {
						displayErrorMessage('Error: An issue occurred while processing the request. Please try again later !');
					}
				} else {
					displayErrorMessage('Error: The request was processed, but the response is not fully ready yet !');
				}
			};
			xhr.send(formData);
		} else {
			displayErrorMessage('Please enter a image !');
			return;	
		}
	});
	function clearFormFields() {
        document.getElementById('cover_image_coverImage').value = '';
    }
    
    function handleModalHidden() {
        clearErrorMessage();
        clearFormFields(); 
    }
    document.getElementById('editCoverImageModal').addEventListener('hidden.bs.modal', handleModalHidden);       
});
</script>
